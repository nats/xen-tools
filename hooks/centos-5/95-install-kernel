#!/bin/sh
#
#  If the pygrub flag is set, this script will install the necessary
# packages to boot the VM from the dom0 via pygrub. This script installs
# the kernel and modules and generates a grub menu.lst in the newly
# created maschine.
#
# Dmitry Nedospasov
# --
# http://nedos.net

prefix=$1

#
#  Source our common functions
#

if [ -e /usr/lib/xen-tools/common.sh ]; then
    . /usr/lib/xen-tools/common.sh
else
    . ./hooks/common.sh
fi

#
# Log our start
#

logMessage Script $0 starting

if [ ${pygrub} ]; then

# remove old kernel/s
chroot ${prefix} /usr/bin/yum remove -y kernel kernel-xen

KERNEL_PKG="kernel"

if [ "${dist}" = "centos-5" ]; then

if [ -z "$KVM" ]; then
KERNEL_PKG="kernel-xen grub"

# centos-5 needs these aliases (centos-6 does not), put them in place before kernel installation so the mkinitrd includes them
cat << EOF > ${prefix}/etc/modprobe.conf
alias eth0 xennet
alias scsi_hostadapter xenblk
EOF
	
else
KERNEL_PKG="kernel grub"

# centos-5 needs these aliases (centos-6 does not), put them in place before kernel installation so the mkinitrd includes them
cat << EOF > ${prefix}/etc/modprobe.conf
alias eth0 virtio_net
alias scsi_hostadapter virtio_blk
EOF

fi

fi

logMessage Attempting to install package $KERNEL_PKG
if chroot ${prefix} /usr/bin/yum info $KERNEL_PKG > /dev/null 2>&1; then
    logMessage Package $KERNEL_PKG is available - installing
    for X in sys proc dev ; do mount -o bind /$X ${prefix}/$X ; done
    installCentOS4Package ${prefix} $KERNEL_PKG
    for X in sys proc dev ; do umount ${prefix}/$X ; done
else
		logMessage Package $KERNEL_PKG is not available
		logMessage pygrub set, but kernel could not be installed
		logMessage Script $0 failed
		exit 1
fi

DOMU_KERNEL=$(basename $(ls -1 ${prefix}/boot/vmlinuz* | tail -n 1))
DOMU_RAMDISK=$(basename $(ls -1 ${prefix}/boot/init*|tail -n 1))
KERNEL_REV=$(echo $DOMU_KERNEL | sed "s/vmlinuz-//g")
DOMU_ISSUE=$(sed -re "s/ *\\\.*//g" -e1q < ${prefix}/etc/issue)

#
# Generate a menu.lst for pygrub
#

logMessage Creating menu.lst for $DOMU_ISSUE: booting $DOMU_KERNEL with initrd $DOMU_RAMDISK

mkdir -p ${prefix}/boot/grub
cat << E_O_MENU > ${prefix}/etc/grub.conf
default         0
timeout         1

title           $DOMU_ISSUE
root            (hd0,0)
kernel          /boot/$DOMU_KERNEL root=/dev/${disk_device}1 ro 
initrd          /boot/$DOMU_RAMDISK

E_O_MENU

chroot ${prefix} ln -s /etc/grub.conf /boot/grub/menu.lst

else
    logMessage pygrub not set, skipping kernel install
fi

#
#  Log our finish
#

logMessage Script $0 finished
